buildscript {
    repositories {
        mavenLocal()
        //2021-06-07 更換 repo
        maven { url "https://repo.grails.org/artifactory/core" }
        //maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.15.1"
    }
}

version "0.1"
group "FonTicket"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

war.baseName "${rootProject.name}"

repositories {
    mavenLocal()
    //2021-06-07 更換 repo
    maven { url "https://repo.grails.org/artifactory/core" }
    //maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://nexus.fontrip.com/repository/maven-snapshots/" }
}
grails { pathingJar = true }

dependencies {
    compile fileTree(dir: 'lib', include: '*.jar')
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.16.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.15.1"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails.plugins:geb:1.1.2"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:2.47.1"
    // 以上均為Default Configuration 
    
    runtime 'mysql:mysql-connector-java:5.1.47'
    compile 'com.google.cloud.sql:mysql-socket-factory:1.0.15'
    compile 'org.grails.plugins:quartz:2.0.13'
    compile "org.grails.plugins:export:2.0.0"
    compile 'org.grails.plugins:audit-logging:3.0.3'
    compile 'org.grails.plugins:browser-detection:3.4.0'
    compile 'org.grails.plugins:spring-security-core:3.2.3'
    compile 'org.grails.plugins:spring-security-oauth2:1.2.0'
    compile 'org.grails.plugins:spring-security-oauth2-google:1.2.0'
    compile 'org.grails.plugins:spring-security-oauth2-facebook:1.0.0'
    compile 'org.grails.plugins:redis:2.0.5'
    compile "com.fontrip:itri-localizations:3.3.0-SNAPSHOT"
    // https://mvnrepository.com/artifact/org.sejda.imageio/webp-imageio
    // 處理webp格式圖片轉檔
    compile "org.sejda.imageio:webp-imageio:0.1.6"

    //操作 Excel File
    compile 'org.apache.poi:poi-ooxml:4.1.0'
    // http builder for ignoreSSLIssue(目前用於開立發票功能)
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    // 此套件是為了處理上傳JPG圖片讀取Issue，其編碼可額外支援CMYK編碼，原內建JAVA僅支援RGB編碼
    compile 'com.twelvemonkeys.imageio:imageio-jpeg:3.6.1'
    // Google Big Query
    compile 'com.google.cloud:google-cloud-bigquery:1.117.1'
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

assets {
    minifyJs = true
    minifyCss = true
    includes = ["plugins/*"]
}
